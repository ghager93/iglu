"""api unique name

Revision ID: c53ab149b69a
Revises: 61f48ac5e69a
Create Date: 2025-08-28 14:07:26.634875

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'c53ab149b69a'
down_revision: Union[str, None] = '61f48ac5e69a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # SQLite-compatible approach: copy-and-move strategy
    # Create new table with desired schema
    op.create_table('api_users_new',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default="1", nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('name')
    )
    
    # Copy data from old table to new table
    op.execute('''
        INSERT INTO api_users_new (id, name, email, api_key, is_active, created_at, updated_at)
        SELECT id, name, email, api_key, is_active, created_at, updated_at
        FROM api_users
    ''')
    
    # Drop old table
    op.drop_table('api_users')
    
    # Rename new table to original name
    op.rename_table('api_users_new', 'api_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # SQLite-compatible approach: copy-and-move strategy
    # Create new table with original schema
    op.create_table('api_users_old',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('api_key', sa.String(length=255), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),  # Restore unique constraint on email
        sa.UniqueConstraint('api_key')
    )
    
    # Copy data from current table to old table
    op.execute('''
        INSERT INTO api_users_old (id, name, email, api_key, is_active, created_at, updated_at)
        SELECT id, name, email, api_key, is_active, created_at, updated_at
        FROM api_users
    ''')
    
    # Drop current table
    op.drop_table('api_users')
    
    # Rename old table to original name
    op.rename_table('api_users_old', 'api_users')
    # ### end Alembic commands ###
